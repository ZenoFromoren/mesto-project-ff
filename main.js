(()=>{"use strict";var __webpack_modules__={333:()=>{eval("\n// UNUSED EXPORTS: popups\n\n;// CONCATENATED MODULE: ./src/components/modal.js\nvar closePopupByEscape = function closePopupByEscape(evt) {\n  if (evt.key === 'Escape') {\n    closeModal(document.querySelector('.popup_is-opened'));\n  }\n};\nvar closePopupByOverlayClick = function closePopupByOverlayClick(evt) {\n  if (evt.target.classList.contains('popup')) {\n    closeModal(evt.target);\n  }\n};\nvar openModal = function openModal(popupElement) {\n  popupElement.classList.add('popup_is-opened');\n  document.addEventListener('keydown', closePopupByEscape);\n};\nvar closeModal = function closeModal(popupElement) {\n  popupElement.classList.remove('popup_is-opened');\n  document.removeEventListener('keydown', closePopupByEscape);\n};\n;// CONCATENATED MODULE: ./src/components/api.js\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar APIconfig = {\n  baseUrl: 'https://nomoreparties.co/v1/cohort-magistr-2',\n  headers: {\n    authorization: 'eaf014af-7c89-4f38-a8a4-e2b61e5fa806',\n    'Content-Type': 'application/json'\n  }\n};\nvar request = function request(endpoint) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return fetch(\"\".concat(APIconfig.baseUrl, \"/\").concat(endpoint), _objectSpread({\n    method: \"GET\",\n    headers: APIconfig.headers\n  }, options)).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n};\nvar getInitialCards = function getInitialCards() {\n  return request('cards');\n};\nvar getProfileData = function getProfileData() {\n  return request('users/me');\n};\nvar changeProfileData = function changeProfileData(name, about) {\n  return request('users/me', {\n    method: 'PATCH',\n    body: JSON.stringify({\n      name: name,\n      about: about\n    })\n  });\n};\nvar addNewPlace = function addNewPlace(name, link) {\n  return request('cards', {\n    method: 'POST',\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  });\n};\nvar changeAvatar = function changeAvatar(avatar) {\n  return request('users/me/avatar', {\n    method: 'PATCH',\n    body: JSON.stringify({\n      avatar: avatar\n    })\n  });\n};\nvar deleteCard = function deleteCard(cardId) {\n  return request(\"cards/\".concat(cardId), {\n    method: 'DELETE'\n  });\n};\nvar setLike = function setLike(cardId) {\n  return request(\"cards/likes/\".concat(cardId), {\n    method: 'PUT'\n  });\n};\nvar removeLike = function removeLike(cardId) {\n  return request(\"cards/likes/\".concat(cardId), {\n    method: 'DELETE'\n  });\n};\n;// CONCATENATED MODULE: ./src/components/card.js\n\nvar handleDeleteCard = function handleDeleteCard(evt, cardId) {\n  deleteCard(cardId).then(evt.target.closest('.card').remove()).catch(function (err) {\n    return console.log(err);\n  });\n};\nvar likeCard = function likeCard(evt, cardId) {\n  var likeMethod = evt.target.classList.contains('card__like-button_is-active') ? removeLike : setLike;\n  likeMethod(cardId).then(function (res) {\n    evt.target.closest('.card').querySelector('.card__numberOfLikes').textContent = res.likes.length;\n    evt.target.classList.toggle('card__like-button_is-active');\n    evt.target.classList.contains('card__like-button_is-active') ? evt.target.ariaLabel = 'Убрать лайк карточке' : evt.target.ariaLabel = 'Поставить лайк карточке';\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nvar createCard = function createCard(cardTitle, cardImage, handleDeleteCard, likeCard, openTypeImagePopup, cardId, cardOwnerId, cardLikes, profileId) {\n  var cardTemplate = document.querySelector('#card-template').content;\n  var cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n  var cardLikeButton = cardElement.querySelector('.card__like-button');\n  var cardIsLiked = cardLikes.some(function (profile) {\n    return profileId === profile['_id'];\n  });\n  var cardNumberOfLikes = cardElement.querySelector('.card__numberOfLikes');\n  var cardDeleteButton = cardElement.querySelector('.card__delete-button');\n  var popupImage = cardElement.querySelector('.card__image');\n  cardElement.querySelector('.card__title').textContent = cardTitle;\n  popupImage.src = cardImage;\n  popupImage.alt = \"\\u0424\\u043E\\u0442\\u043E \".concat(cardTitle);\n  cardNumberOfLikes.textContent = cardLikes.length;\n  cardLikeButton.addEventListener('click', function (evt) {\n    return likeCard(evt, cardId);\n  });\n  popupImage.addEventListener('click', function () {\n    return openTypeImagePopup(cardTitle, cardImage);\n  });\n  cardOwnerId !== profileId ? cardDeleteButton.remove() : cardDeleteButton.addEventListener('click', function (evt) {\n    return handleDeleteCard(evt, cardId);\n  });\n  cardIsLiked ? cardLikeButton.classList.add('card__like-button_is-active') : cardLikeButton.classList.remove('card__like-button_is-active');\n  cardLikeButton.classList.contains('card__like-button_is-active') ? cardLikeButton.ariaLabel = 'Убрать лайк карточке' : cardLikeButton.ariaLabel = 'Поставить лайк карточке';\n  return cardElement;\n};\n;// CONCATENATED MODULE: ./src/components/validation.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar showInputError = function showInputError(formElement, inputElement, validationConfig) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.name, \"-error\"));\n  var errorMessage = inputElement.validationMessage;\n  errorElement.textContent = errorMessage;\n  inputElement.classList.add(validationConfig.inputErrorClass);\n  errorElement.classList.add(validationConfig.errorClass);\n};\nvar hideInputError = function hideInputError(formElement, inputElement, validationConfig) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.name, \"-error\"));\n  var errorMessage = '';\n  errorElement.textContent = errorMessage;\n  inputElement.classList.remove(validationConfig.inputErrorClass);\n  errorElement.classList.remove(validationConfig.errorClass);\n};\nvar toggleButtonState = function toggleButtonState(isValid, buttonElement, validationConfig) {\n  if (!isValid) {\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\n    buttonElement.disabled = true;\n  } else {\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n    buttonElement.disabled = false;\n  }\n};\nvar checkInputValidity = function checkInputValidity(formElement, inputElement, validationConfig) {\n  var isInputValid = inputElement.validity.valid;\n  var isPatternMismatch = inputElement.validity.patternMismatch;\n  isPatternMismatch ? inputElement.setCustomValidity(inputElement.dataset.errorMessage) : inputElement.setCustomValidity('');\n  !isInputValid ? showInputError(formElement, inputElement, validationConfig) : hideInputError(formElement, inputElement, validationConfig);\n};\nvar setEventListeners = function setEventListeners(formElement, validationConfig) {\n  var inputList = _toConsumableArray(formElement.querySelectorAll(validationConfig.inputSelector));\n  var buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener('input', function () {\n      checkInputValidity(formElement, inputElement, validationConfig);\n      toggleButtonState(formElement.checkValidity(), buttonElement, validationConfig);\n    });\n  });\n};\nvar clearValidation = function clearValidation(formElement, validationConfig) {\n  var formSubmitButton = formElement.querySelector(validationConfig.submitButtonSelector);\n  toggleButtonState(false, formSubmitButton, validationConfig);\n  var inputList = formElement.querySelectorAll(validationConfig.inputSelector);\n  inputList.forEach(function (inputElement) {\n    return hideInputError(formElement, inputElement, validationConfig);\n  });\n};\nvar enableValidation = function enableValidation(validationConfig) {\n  var formList = _toConsumableArray(document.querySelectorAll(validationConfig.formSelector));\n  formList.forEach(function (formElement) {\n    return setEventListeners(formElement, validationConfig);\n  });\n};\n;// CONCATENATED MODULE: ./src/components/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || components_unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction components_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return components_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return components_arrayLikeToArray(o, minLen); }\nfunction components_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\nvar places = document.querySelector('.places');\nvar placesList = places.querySelector('.places__list');\nvar profileEditForm = document.forms['edit-profile'];\nvar profileTitle = document.querySelector('.profile__title');\nvar profileDescription = document.querySelector('.profile__description');\nvar profileImage = document.querySelector('.profile__image');\nvar nameInput = profileEditForm.querySelector('.popup__input_type_name');\nvar jobInput = profileEditForm.querySelector('.popup__input_type_description');\nvar newPlaceForm = document.forms['new-place'];\nvar placeInput = newPlaceForm.querySelector('.popup__input_type_card-name');\nvar linkInput = newPlaceForm.querySelector('.popup__input_type_url');\nvar updateAvatarForm = document.forms['update-avatar'];\nvar avatarLinkInput = updateAvatarForm.querySelector('.popup__input_type_avatar_link');\nvar popups = document.querySelectorAll('.popup');\nvar popupTypeEdit = document.querySelector('.popup_type_edit');\nvar popupTypeNewCard = document.querySelector('.popup_type_new-card');\nvar popupTypeImage = document.querySelector('.popup_type_image');\nvar popupUpdateAvatar = document.querySelector('.popup_update_avatar');\nvar profileEditButton = document.querySelector('.profile__edit-button');\nvar popupCloseButtons = document.querySelectorAll('.popup__close');\nvar profileAddButton = document.querySelector('.profile__add-button');\nvar validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\nvar cardDataPromise = getInitialCards();\nvar profileDataPromise = getProfileData();\nvar setprofileData = function setprofileData(profileData) {\n  profileTitle.textContent = profileData.name;\n  profileDescription.textContent = profileData.about;\n  profileImage.style.backgroundImage = \"url(\".concat(profileData.avatar, \")\");\n};\nvar handleFormProfileEditSubmit = function handleFormProfileEditSubmit(evt) {\n  evt.preventDefault();\n  popupTypeEdit.querySelector('.button').textContent = 'Сохранение...';\n  changeProfileData(nameInput.value, jobInput.value).then(function (profileData) {\n    setprofileData(profileData);\n    closeModal(popupTypeEdit);\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    return profileEditForm.querySelector('.button').textContent = 'Сохранить';\n  });\n};\nvar handleFormNewPlaceSubmit = function handleFormNewPlaceSubmit(evt) {\n  evt.preventDefault();\n  newPlaceForm.querySelector('.button').textContent = 'Сохранение...';\n  addNewPlace(placeInput.value, linkInput.value).then(function (newCardData) {\n    placesList.prepend(createCard(newCardData.name, newCardData.link, handleDeleteCard, likeCard, openTypeImagePopup, newCardData['_id'], newCardData.owner['_id'], newCardData.likes, profileId));\n    newPlaceForm.reset();\n    closeModal(popupTypeNewCard);\n  }).then().catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    return newPlaceForm.querySelector('.button').textContent = 'Сохранить';\n  });\n};\nvar handleFormUpdateAvatarSubmit = function handleFormUpdateAvatarSubmit(evt) {\n  evt.preventDefault();\n  updateAvatarForm.querySelector('.button').textContent = 'Сохранение...';\n  changeAvatar(avatarLinkInput.value).then(function (profileData) {\n    profileImage.style.backgroundImage = \"url(\".concat(profileData.avatar, \")\");\n    updateAvatarForm.reset();\n    closeModal(popupUpdateAvatar);\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    return updateAvatarForm.querySelector('.button').textContent = 'Сохранить';\n  });\n};\nvar openTypeImagePopup = function openTypeImagePopup(cardTitle, cardImage) {\n  popupTypeImage.querySelector('.popup__image').src = cardImage;\n  popupTypeImage.querySelector('.popup__image').alt = \"\\u0424\\u043E\\u0442\\u043E \".concat(cardTitle);\n  popupTypeImage.querySelector('.popup__caption').textContent = cardTitle;\n  openModal(popupTypeImage);\n};\nprofileEditForm.addEventListener('submit', handleFormProfileEditSubmit);\nnewPlaceForm.addEventListener('submit', handleFormNewPlaceSubmit);\nupdateAvatarForm.addEventListener('submit', handleFormUpdateAvatarSubmit);\nprofileEditButton.addEventListener('click', function () {\n  clearValidation(profileEditForm, validationConfig);\n  openModal(popupTypeEdit);\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n});\npopupCloseButtons.forEach(function (button) {\n  return button.addEventListener('click', function (evt) {\n    return closeModal(evt.target.closest('.popup'));\n  });\n});\nprofileAddButton.addEventListener('click', function () {\n  newPlaceForm.reset();\n  clearValidation(newPlaceForm, validationConfig);\n  openModal(popupTypeNewCard);\n});\npopups.forEach(function (popup) {\n  return popup.addEventListener('click', closePopupByOverlayClick);\n});\nprofileImage.addEventListener('click', function () {\n  updateAvatarForm.reset();\n  clearValidation(updateAvatarForm, validationConfig);\n  openModal(popupUpdateAvatar);\n});\nenableValidation(validationConfig);\nvar profileId;\nPromise.all([profileDataPromise, cardDataPromise]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    profileData = _ref2[0],\n    cardData = _ref2[1];\n  profileId = profileData['_id'];\n  setprofileData(profileData);\n  cardData.forEach(function (cardElement) {\n    return placesList.append(createCard(cardElement.name, cardElement.link, handleDeleteCard, likeCard, openTypeImagePopup, cardElement['_id'], cardElement.owner['_id'], cardElement.likes, profileId));\n  });\n}).catch(function (err) {\n  return console.log(err);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///333\n")}},__webpack_exports__={};__webpack_modules__[333]()})();